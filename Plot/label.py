def simpleConceptLabel():
        labels = {' ':[' '],
        'CO-USE_COMBUST_MJ_COMBUST_TOBACCO':['COMBUST_MJ','COMBUST_TOBACCO'],
        'DUAL-USE_COMBUST_MJ_VAPING_MJ':['COMBUST_MJ','VAPING_MJ'], 
        'DUAL-USE_COMBUST_MJ_VAPE_NIC/TOBACCO':['COMBUST_MJ','VAPING_NIC'],
        'DUAL-USE_COMBUST_MJ_COMBUST_TOBACCO':['COMBUST_MJ','COMBUST_TOBACCO'],
        'DUAL-USE_VAPING_MJ_VAPING_NIC/TOBACCO':['VAPING_MJ','VAPING_NIC'],
        'DUAL-USE_COMBUST_TOBACCO_VAPING_NIC/TOBACCO':['COMBUST_TOBACCO','VAPING_NIC'],
        'DUAL-USE_VAPING_MJ_COMBUST_TOBACCO':['COMBUST_TOBACCO','VAPING_MJ'],
        'POLY-USE_COMBUST_TOBACCO_COMBUST_MJ_VAPING_MJ':['COMBUST_TOBACCO','VAPING_MJ','COMBUST_MJ'],
        'POLY-USE_COMBUST_TOBACCO_COMBUST_MJ_VAPING_NIC/TOBACCO':['COMBUST_TOBACCO','COMBUST_MJ','VAPING_NIC'],
        'POLY_USE_COMBUST_TOABBCO_VAPING_MJ_VAPING_NIC/TOBACCO':['COMBUST_TOBACCO','VAPING_MJ','VAPING_NIC'],
        'POLY_USE_COMBUST_MJ_VAPING_MJ_VAPING_NIC/TOBACCO':['COMBUST_MJ','VAPING_MJ','VAPING_NIC'],
        'COMBUST_MJ':['COMBUST_MJ'],
        'COMBUST_TOBACCO':['COMBUST_TOBACCO'],
        'VAPING_MJ':['VAPING_MJ'],
        'VAPING_NIC/TOBACCO':['VAPING_NIC'],
        'BRAND':['VAPING_NIC'],
        'VAPING':['VAPING_NIC'],
        'SMOKING_CESSATION':['CESSATION']}

	return labels


def classLabel():
	labels = {' ':[' '],
	'CO-USE_COMBUST_MJ_COMBUST_TOBACCO':['TOBACCO','MJ'], 
	'DUAL-USE_COMBUST_MJ_VAPING_MJ':['MJ','VAPING'], 
	'DUAL-USE_COMBUST_MJ_VAPE_NIC/TOBACCO':['MJ','VAPING','TOBACCO'], 
	'DUAL-USE_COMBUST_MJ_COMBUST_TOBACCO':['MJ','TOBACCO'], 
	'DUAL-USE_VAPING_MJ_VAPING_NIC/TOBACCO':['VAPING','MJ','TOBACCO'],
	'DUAL-USE_COMBUST_TOBACCO_VAPING_NIC/TOBACCO':['TOBACCO','VAPING'],
	'DUAL-USE_VAPING_MJ_COMBUST_TOBACCO':['VAPING','MJ','TOBACCO'],
	'POLY-USE_COMBUST_TOBACCO_COMBUST_MJ_VAPING_MJ':['TOBACCO','MJ','VAPING'],
	'POLY-USE_COMBUST_TOBACCO_COMBUST_MJ_VAPING_NIC/TOBACCO':['TOBACCO','MJ','VAPING'],
	'POLY_USE_COMBUST_TOABBCO_VAPING_MJ_VAPING_NIC/TOBACCO':['TOBACCO','VAPING','MJ'],
	'POLY_USE_COMBUST_MJ_VAPING_MJ_VAPING_NIC/TOBACCO':['MJ','VAPING','TOBACCO'],
	'COMBUST_MJ':['MJ'],
	'COMBUST_TOBACCO':['TOBACCO'],
	'VAPING_MJ':['VAPING','MJ'],
	'VAPING_NIC/TOBACCO':['TOBACCO','VAPING'],
	'BRAND':['VAPING'],
	'VAPING':['VAPING'],
	'SMOKING_CESSATION':['CESSATION']}

	return labels

def relationLabel():
	labels = [
	'COMBUST_MJ_TO_COMBUST_TOBACCO',
	'COMBUST_MJ_TO_SMOKING_CESSATION',
	'COMBUST_MJ_TO_VAPING',
	'COMBUST_MJ_TO_VAPING_MJ',
	'COMBUST_MJ_TO_VAPING_NIC',
	'COMBUST_TOBACCO_TO_COMBUST_MJ',
	'COMBUST_TOBACCO_TO_SMOKING_CESSATION',
	'COMBUST_TOBACCO_TO_VAPING',
	'COMBUST_TOBACCO_TO_VAPING_MJ',
	'COMBUST_TOBACCO_TO_VAPING_NIC/TOBACCO',
	'COUSE_TO_SMOKING_CESSATION',
	'DUAL_COMBUST_MJ_TOBACCO_TO_SMOKING_CESSATION',
	'DUAL_COMBUST_MJ_VAPE_NIC_TO_SMOKING_CESSATION',
	'DUAL_COMBUST_MJ_VAPING_MJ_TO_SMOKING_CESSATION',
	'DUAL_COMBUST_TOBACCO_VAPING_NIC_TO_SMOKING_CESSATION',
	'DUAL_VAPING_MJ_COMBUST_TOBACCO_TO_SMOKING_CESSATION',
	'DUAL_VAPING_MJ_NIC_TO_SMOKING_CESSATION',
	'POLY_COMBUST_MJ_VAPING MJ_NIC_TO_SMOKING_CESSATION',
	'POLY_COMBUST_TOBACCO_MJ_VAPING_MJ_TO_SMOKING_CESSATION',
	'POLY_COMBUST_TOBACCO_MJ_VAPING_NIC_TO_SMOKING_CESSATION',
	'POLY_COMBUST_TOBACCO_VAPING_MJ_NIC_TO_SMOKING_CESSATION',
	'VAPING_MJ_TO_COMBUST_MJ',
	'VAPING_MJ_TO_COMBUST_TOBACCO',
	'VAPING_MJ_TO_SMOKING_CESSATION',
	'VAPING_MJ_TO_VAPING',
	'VAPING_MJ_TO_VAPING_NIC',
	'VAPING_NIC_TO_COMBUST_MJ',
	'VAPING_NIC_TO_COMBUST_TOBACCO',
	'VAPING_NIC_TO_SMOKING_CESSATION',
	'VAPING_NIC_TO_VAPING',
	'VAPING_NIC_TO_VAPING_MARIJUANA',
	'VAPING_TO_COMBUST_MJ',
	'VAPING_TO_COMBUST_TOBACCO',
	'VAPING_TO_SMOKING_CESSATION',
	'VAPING_TO_VAPING_MJ',
	'VAPING_TO_VAPING_NIC',
	' '
	]

	return labels

def triangulumLabel():
	return ['MJ','CESSATION','VAPING', 'TOBACCO',' ']

def labelGen(labelList):
	labels = triangulumLabel() #['MJ','CESSATION','VAPING', 'TOBACCO',' ']
	outLabelVec = [0,0,0,0,0]
	for l in labelList:
		for i in range(len(labels)):
			if l == labels[i]:
				outLabelVec[i] = 1
	return outLabelVec

def relLabelGen(labelList):
	#labels = relationLabel()
	##initialize label
	#outLabelVec = []
	#for i in range(len(labels)):
	#	outLabelVec.append(0)

	
	#for l in labelList:
	#	for i in range(len(labels)):
	#		if l == labels[i]:
	#			outLabelVec[i] = 1
	outLabelVec = []
	for l in labelList:
		if not(l==' '):
			outLabelVec.append(1)
		else:
			outLabelVec.append(0)
	if sum(outLabelVec)==0:
		return [0]
	else:
		return [1]
	#return outLabelVec
